import React, { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";

const ProjectDetail = () => {
  const { projectId } = useParams();
  const navigate = useNavigate(); // Hook for navigation

  const projectDetails = {

    1: {
      title: "sdjnkl",
      description: "IFP Festival Ground",
      rows: [

        {
          description: "Description for xxx row of images.",
          images: ["/images/project-1/7.webp"],
          layout: "grid-cols-1 gap-1",
        },

        {
          description: "Description for xxxx row of images.",
          images: ["/images/project-1/8.webp"],
          layout: "grid-cols-1 gap-1",
        },

        {
          description: "Description for the first row of images.",
          images: ["/images/project-1/1.webp"],
          layout: "grid-cols-1 gap-1",
        },
        {
          description: "Description for the second row of images.",
          images: ["/images/project-1/2.webp","/images/project-1/3.webp"],
          layout: "grid-cols-2 gap-1",
        },
        {
          description: "Description for the third row of images.",
          images: ["/images/project-1/4.webp"],
          layout: "grid-cols-1 gap-1",
        },
        {
          description: "Description for the fourth row of images.",
          images: ["/images/project-1/5.webp","/images/project-1/6.webp"],
          layout: "grid-cols-2 gap-1",
        },

        {
          description: "Description for xxx row of images.",
          images: ["/images/project-1/9.webp"],
          layout: "grid-cols-1 gap-1",
        },

        {
          description: "Description for xxxxx row of images.",
          images: ["/images/project-1/10.jpg","/images/project-1/11.webp","/images/project-1/12.webp"],
          layout: "grid-cols-3 gap-1",
        },

        {
          description: "Description for xxxxx row of images.",
          images: ["/images/project-1/13.webp","/images/project-1/14.webp","/images/project-1/15.webp"],
          layout: "grid-cols-3 gap-1",
        },

        {
          description: "Description for xxxxx row of images.",
          images: ["/images/project-1/16.webp","/images/project-1/17.webp","/images/project-1/18.webp",
                   "/images/project-1/19.webp","/images/project-1/20.webp","/images/project-1/21.webp"],
          layout: "grid-cols-3 gap-1",
        },
        { 
          images: ["/images/project-1/thanku.webp"],
          layout: "grid-cols-1 gap-1",
        },
       
      ],
    
    },


    2: {
      title: "",
      description: "IFP Festival Brand Identity",
      rows: [
        {
          description: "Description for the first row of images.",
          images: ["/images/project-2/1.webp"],
          layout: "grid-cols-1 gap-1",
        },
        {
          description: "Description for the second row of images.",
          images: ["/images/project-2/2.webp"],
          layout: "grid-cols-1 gap-1",
        },
        {
          description: "Description for the third row of images.",
          images: ["/images/project-2/3.webp"],
          layout: "grid-cols-1 gap-1",
        },
        {
          description: "Description for the fourth row of images.",
          images: ["/images/project-2/4.webp"],
          layout: "grid-cols-1 gap-1",
        },
        {
          description: "Description for the fifth row of images.",
          images: [
            "/images/project-2/5.webp",
            "/images/project-2/6.webp",
            "/images/project-2/7.webp",
            "/images/project-2/8.webp",
          ],
          layout: "grid-cols-2 gap-1",
        },
        {
          description: "Description for the sixth row of images.",
          images: [
            "/images/project-2/9.webp",
            "/images/project-2/10.webp",
            "/images/project-2/11.webp",
            "/images/project-2/12.webp",
            "/images/project-2/13.webp",
          ],
          layout: "grid-cols-5 gap-1",
        },
 
        {
          description: "Description for the seventh row of images.",
          images: [
            "/images/project-2/14.webp",
            "/images/project-2/15.webp",
            "/images/project-2/16.webp",
          ],
          layout: "grid-cols-3 gap-1",
        },

       

        {
          description: "Description for the eight row of images.",
          images: [
            "/images/project-2/17.webp",
            "/images/project-2/18.webp",
            "/images/project-2/18.2.webp",
          ],
          layout: "grid-cols-3 gap-1",
        },
      
        {
          description: "Description for the ninth row of images.",
          images: [
            "/images/project-2/23.webp",
            "/images/project-2/24.webp",
            "/images/project-2/25.webp",
            "/images/project-2/26.webp",
          ],
          layout: "grid-cols-4 gap-1",
        },

        {
          description: "Description for the tenth row of images.",
          images: [
           
            "/images/project-2/27.webp",
            "/images/project-2/28.webp",
            "/images/project-2/29.webp",
          ],
          layout: "grid-cols-3 gap-1",
        },

        {
          images: ["/images/project-2/thanku.webp"],
          layout: "grid-cols-1 gap-1",
        },

        {
          description: "Project video demonstration.",
          video: "/videos/project1/demo.mp4",
        },
      ],
    },
  };

  const project = projectDetails[projectId];

  // Combine all images into a single array
  const allImages = project?.rows.flatMap((row) => row.images || []) || [];

  const [isImageModalOpen, setIsImageModalOpen] = useState(false);
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  const openImageModal = (imageIndex) => {
    setCurrentImageIndex(imageIndex);
    setIsImageModalOpen(true);
  };

  const closeImageModal = () => {
    setIsImageModalOpen(false);
  };

  const navigateImage = (direction) => {
    setCurrentImageIndex((prevIndex) => {
      const totalImages = allImages.length;
      return (prevIndex + direction + totalImages) % totalImages;
    });
  };

  return (
    <section className="py-12 bg-gray-100">
      <div className="container mx-auto text-center">
        <h2 className="text-4xl font-bold mb-6">{project?.title}</h2>

        {/* Main content container */}
        <div className="mx-auto bg-white p-8 rounded-lg shadow-lg space-y-8 w-[98%] sm:w-4/5">
          {project?.rows.map((row, rowIndex) => (
            <div key={rowIndex}>
              {row.images && (
                <div className={`grid ${row.layout}`}>
                  {row.images.length === 1 ? (
                    // For rows with a single image, set the height dynamically
                    <img
                      key={rowIndex}
                      src={row.images[0]}
                      alt={`Project image ${rowIndex + 1}`}
                      className="w-full object-contain cursor-pointer transition-transform transform hover:scale-105"
                      onClick={() =>
                        openImageModal(allImages.indexOf(row.images[0]))
                      }
                    />
                  ) : (
                    // For rows with multiple images, set the height to 300px and scale the images
                    row.images.map((image, index) => (
                      <img
                        key={index}
                        src={image}
                        alt={`Project image ${index + 1}`}
                        className="w-full h-[500px] object-cover cursor-pointer transition-transform transform hover:scale-105"
                        onClick={() =>
                          openImageModal(allImages.indexOf(image))
                        }
                      />
                    ))
                  )}
                </div>
              )}

              {row.video && (
                <div className="mt-6">
                  <video
                    src={row.video}
                    controls
                    autoPlay
                    loop
                    muted
                    className="w-full rounded-lg shadow-lg"
                  />
                </div>
              )}

              <p className="mt-4 text-sm text-gray-600">{row.description}</p>
            </div>
          ))}
        </div>

        <p className="text-lg text-gray-700 mt-6">{project?.description}</p>

        {/* Back Button */}
        <div className="mt-10">
          <button
            onClick={() => navigate(-1)} // Navigate to the previous page
            className="px-6 py-3 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 transition-colors"
          >
            Back
          </button>
        </div>

        {/* Fullscreen Image Modal */}
        {isImageModalOpen && (
          <div className="fixed inset-0 bg-black bg-opacity-75 flex justify-center items-center z-50">
            <button
              onClick={closeImageModal}
              className="absolute top-4 right-4 text-white text-3xl z-50"
            >
              &times;
            </button>
            <button
              onClick={() => navigateImage(-1)}
              className="absolute left-4 top-1/2 transform -translate-y-1/2 text-white text-3xl z-50"
            >
              &#8249;
            </button>
            <img
              src={allImages[currentImageIndex]}
              alt="Selected"
              className="w-full h-full object-contain max-h-screen"
            />
            <button
              onClick={() => navigateImage(1)}
              className="absolute right-4 top-1/2 transform -translate-y-1/2 text-white text-3xl z-50"
            >
              &#8250;
            </button>
          </div>
        )}
      </div>
    </section>
  );
};

//export default ProjectDetail;

//PortfolioPreview
import React from "react";
import { Link } from "react-router-dom";

const PortfolioPreview = () => {
  // Array holding the project data
  const projects = [
    { id: 1, title: "Project One", image: "/images/project-1/1.webp" },
    { id: 2, title: "IFP Festival Brand Identity", image: "/images/project-2/main.png" },
    { id: 3, title: "Project Three", image: "/path/to/image3.jpg" },
    { id: 4, title: "Project Four", image: "/path/to/image4.jpg" },
    { id: 5, title: "Project Five", image: "/path/to/image5.jpg" },
    { id: 6, title: "Project Five", image: "/path/to/image5.jpg" },
  ];

  return (
    <section className="py-12 bg-white">
      {/* Section Header */}
      <h2 className="text-3xl font-bold text-center mb-8">My Portfolio</h2>

      {/* Grid for Portfolio Projects */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 px-6">
        {/* Mapping over the projects to display each one */}
        {projects.map((project) => (
          <Link to={`/portfolio/${project.id}`} key={project.id}>
            <div
              className="relative rounded-lg overflow-hidden shadow-lg transform transition-all duration-500 hover:scale-105 hover:rotate-2 hover:shadow-2xl"
            >
              {/* Card Container */}
              <div className="w-full h-48 group relative">
                {/* Project Image */}
                <img
                  src={project.image}
                  alt={project.title}
                  className="w-full h-full object-cover transition-all duration-500 transform group-hover:scale-110 group-hover:opacity-80"
                />
                {/* Image Flip Effect: Text Overlay */}
                <div className="absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity duration-500 flex justify-center items-center text-white text-lg font-semibold">
                  <p>{project.title}</p>
                </div>
              </div>
              {/* Project Title */}
              <h3 className="text-xl font-semibold mt-4 text-center text-black">
                {project.title}
              </h3>
            </div>
          </Link>
        ))}
      </div>
    </section>
  );
};

export default PortfolioPreview;


import React, { useEffect } from "react";
import { Typewriter } from "react-simple-typewriter";

const Hero = () => {
  useEffect(() => {
    // Trigger animations for floating art icons
    const elements = document.querySelectorAll(".floating-icon");
    elements.forEach((el, index) => {
      el.style.animationDelay = `${index * 0.5}s`;
    });
  }, []);

  return (
    <section className="relative h-screen bg-gradient-to-br from-gray-100 via-gray-300 to-white text-black overflow-hidden">
      {/* Main Content */}
      <div className="relative z-10 text-center animate-fadeIn flex flex-col justify-center items-center h-full px-6">
        <h1 className="text-5xl sm:text-7xl font-extrabold mb-6">
          <span className="text-red-600">
            <Typewriter
              words={["Hello"]}
              loop={false}
              cursor={false}
              typeSpeed={120}
            />
          </span>
          , <span className="text-gray-600">I'm</span>{" "}
          <span className="text-black">RD RAVA</span>
        </h1>
        <p className="text-xl sm:text-2xl text-gray-500 mb-8">
          Digital Art | Creative Illustrator | Passionate Dream Weaver
        </p>
        <button
          onClick={() => document.getElementById("portfolio").scrollIntoView({ behavior: "smooth" })}
          className="bg-red-600 text-white px-8 py-4 rounded-full hover:bg-red-700 transition duration-300"
        >
          View My Work
        </button>
      </div>

      {/* Background Artistic Elements (Illustrative Icons) */}
      <div className="absolute inset-0 z-0 pointer-events-none">
        <div className="floating-icon w-40 h-40 absolute top-1/4 left-1/6 bg-red-500 opacity-40 rounded-full animate-icon1"></div>
        <div className="floating-icon w-36 h-36 absolute top-1/3 left-2/3 bg-blue-600 opacity-50 rounded-full animate-icon2"></div>
        <div className="floating-icon w-56 h-56 absolute top-1/2 left-1/4 bg-purple-500 opacity-30 rounded-full animate-icon3"></div>
        <div className="floating-icon w-64 h-64 absolute top-3/4 left-1/2 bg-green-600 opacity-40 rounded-full animate-icon4"></div>
        <div className="floating-icon w-48 h-48 absolute top-2/3 left-1/3 bg-yellow-500 opacity-35 rounded-full animate-icon5"></div>
      </div>
    </section>
  );
};

//export default Hero;




import React, { useState } from "react";
import ProjectDetail from "./ProjectDetail";

//const //PortfolioPreview = () => {
  const [selectedProjectId, setSelectedProjectId] = useState(null);

  const projects = [
    { id: 1, title: "IFP Festival Brand Identity", image: "/images/project-2/main.png" },
    { id: 2, title: "Project OneIFP Festival S14 On-ground Design", image: "/images/project-2-onground/1.webp" },
    { id: 3, title: "Illustrating the World of Designers and Visual Artists", image: "/images/project-1/1.webp" },
    { id: 4, title: "Brand illustrations for IFP writing challenge page", image: "/images/project-3/2.jpeg" },
    { id: 5, title: "The Shutter’s Voice", image: "/images/project-4/1.webp" },
    { id: 6, title: "A Visual Tribute to Performing Arts", image: "/images/project-6/1.webp" },
    { id: 7, title: "Symphony in Motion", image: "/images/project-6/1.webp" },
    { id: 8, title: "Illustration banner for IFP Fimmaking page", image: "/images/project-7/1.png" },
    { id: 9, title: "Hallelujah", image: "/images/project-8/1.jpg" },
  ];

  const openProject = (projectId) => {
    setSelectedProjectId(projectId);
  };

  const closeProject = () => {
    setSelectedProjectId(null);
  };

  return (
    <section className="py-12 bg-white" id="portfolio">
      <h2 className="text-3xl font-bold text-center mb-8">My Works</h2>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 px-6">
        {projects.map((project) => (
          <div
            key={project.id}
            className="relative rounded-lg overflow-hidden shadow-lg transform transition-all duration-500 hover:scale-105 hover:rotate-2 hover:shadow-2xl cursor-pointer"
            onClick={() => openProject(project.id)}
          >
            <div className="w-full h-48 group relative">
              <img
                src={project.image}
                alt={project.title}
                className="w-full h-full object-cover transition-all duration-500 transform group-hover:scale-110 group-hover:opacity-80"
              />
              <div className="absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity duration-500 flex justify-center items-center text-white text-lg font-semibold">
                <p>{project.title}</p>
              </div>
            </div>
            <h3 className="text-xl font-semibold mt-4 text-center text-black">
              {project.title}
            </h3>
          </div>
        ))}
      </div>

      {/* Popup Modal */}
      {selectedProjectId && (
        <div className="fixed inset-0 bg-black bg-opacity-75 flex justify-center items-center z-50">
          <div className="relative w-[90%] sm:w-4/5 max-h-[90vh] bg-white rounded-lg shadow-lg overflow-y-auto">
            <button
              onClick={closeProject}
              className="absolute top-4 right-4 text-black text-2xl font-bold z-50"
            >
              &times;
            </button>
            <ProjectDetail projectId={selectedProjectId} onClose={closeProject} />
          </div>
        </div>
      )}
    </section>
  );
//};

// export default PortfolioPreview;


//hero import React, { useEffect, useState } from "react";
import { Typewriter } from "react-simple-typewriter";

//const Hero = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [showResume, setShowResume] = useState(false);

  useEffect(() => {
    const elements = document.querySelectorAll(".floating-icon");
    elements.forEach((el, index) => {
      el.style.animationDelay = `${index * 0.5}s`;
    });

    document.body.style.overflow = isMenuOpen || showResume ? "hidden" : "auto";
  }, [isMenuOpen, showResume]);

  const scrollToSection = (sectionId) => {
    document.getElementById(sectionId).scrollIntoView({ behavior: "smooth" });
    setIsMenuOpen(false);
  };

  const toggleResume = () => {
    setShowResume(!showResume);
  };

  return (
    <section className="relative h-screen bg-cover bg-center bg-no-repeat text-black overflow-hidden">
      {/* Responsive Background Images */}
      <div
        className="absolute inset-0 bg-cover bg-center bg-no-repeat md:hidden"
        style={{ backgroundImage: "url('/images/hero-mob.png')" }} // Replace with mobile image path
      ></div>
      <div
        className="absolute inset-0 bg-cover bg-center bg-no-repeat hidden md:block"
        style={{ backgroundImage: "url('/images/hero.jpg')" }} // Replace with desktop image path
      ></div>

      {/* Navigation */}
      <nav className="fixed top-0 left-0 w-full z-20 bg-white bg-opacity-100 backdrop-blur-md">
        <div className="container mx-auto flex justify-between items-center px-6 py-4">
          <h1 className="text-xl md:text-3xl font-bold text-red-600">rd_rava.art</h1>
          {/* Desktop Menu */}
          <ul className="hidden md:flex space-x-8 text-lg">
            <li>
              <button
                onClick={() => scrollToSection("about")}
                className="text-gray-700 hover:text-red-600 transition duration-300"
              >
                About Me
              </button>
            </li>
            <li>
              <button
                onClick={() => scrollToSection("portfolio")}
                className="text-gray-700 hover:text-red-600 transition duration-300"
              >
                Works
              </button>
            </li>
            <li>
              <button
                onClick={() => scrollToSection("hire-me")}
                className="text-gray-700 hover:text-red-600 transition duration-300"
              >
                Hire Me
              </button>
            </li>
            <li>
              <button
                onClick={toggleResume}
                className="text-gray-700 hover:text-red-600 transition duration-300"
              >
                Resume
              </button>
            </li>
          </ul>
          {/* Mobile Menu Button */}
          <button
            className="text-black md:hidden text-xl"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
          >
            {isMenuOpen ? "✕" : "☰"}
          </button>
        </div>
      </nav>

      {/* Mobile Fullscreen Menu */}
      {isMenuOpen && (
        <div className="fixed inset-0 bg-white bg-opacity-90 z-40 flex flex-col justify-center items-center space-y-8 text-lg">
          <button
            onClick={() => scrollToSection("about")}
            className="text-gray-700 hover:text-red-600 transition duration-300"
          >
            About Me
          </button>
          <button
            onClick={() => scrollToSection("portfolio")}
            className="text-gray-700 hover:text-red-600 transition duration-300"
          >
            Works
          </button>
          <button
            onClick={() => scrollToSection("hire-me")}
            className="text-gray-700 hover:text-red-600 transition duration-300"
          >
            Hire Me
          </button>
          <button
            onClick={toggleResume}
            className="text-gray-700 hover:text-red-600 transition duration-300"
          >
            Resume
          </button>
          <button
            onClick={() => setIsMenuOpen(false)}
            className="text-red-600 text-xl mt-6 underline"
          >
            Close
          </button>
        </div>
      )}

      {/* Main Content for Mobile */}
      <div className="relative z-10 text-center animate-fadeIn flex flex-col justify-center items-center h-full px-6 md:hidden mt-[-5%]">
        <h1 className="text-3xl font-extrabold mb-6">
          <span className="text-red-600">
            <Typewriter words={["Hello"]} loop={false} cursor={false} typeSpeed={120} />
          </span>
          , <span className="text-white">I'm</span>{" "}
          <span className="text-black">RD RAVA</span>
        </h1>
        <p className="text-sm text-white-500 mb-8 mt-[-5%]">
          Illustrator | Designer | Graffiti
        </p>
        <button
          onClick={() => scrollToSection("portfolio")}
          className="bg-red-500 text-white px-6 py-2 rounded-full hover:bg-red-600 transition duration-300 text-sm mt-[-5%]"
        >
          View My Work
        </button>
      </div>

      {/* Main Content for Desktop and larger devices */}
      <div className="relative z-10 text-center animate-fadeIn flex flex-col justify-center items-center h-full px-6 hidden md:block mt-[20%]">
        <h1 className="text-3xl sm:text-5xl font-extrabold mb-6">
          <span className="text-blue-600">
            <Typewriter words={["Hello"]} loop={false} cursor={false} typeSpeed={120} />
          </span>
          , <span className="text-white">I'm</span>{" "}
          <span className="text-white">RD RAVA</span>
        </h1>
        <p className="text-lg text-white-500 mb-8">
          Illustrator | Designer | Graffiti
        </p>
        <button
          onClick={() => scrollToSection("portfolio")}
          className="bg-red-500 text-white px-8 py-4 rounded-full hover:bg-red-600 transition duration-300 text-lg"
        >
          View My Work
        </button>
      </div>

      {/* Modal to display the Resume PDF (Pop-up) */}
      {showResume && (
        <div className="fixed inset-0 bg-black bg-opacity-60 flex justify-center items-center z-50">
          <div className="relative w-full h-full max-w-4xl max-h-full bg-white rounded-lg shadow-lg overflow-auto p-8 transform scale-95 transition-all duration-300">
            <button
              onClick={toggleResume}
              className="absolute top-4 right-4 text-black text-3xl font-bold z-50 hover:text-red-600"
            >
              &times;
            </button>

            <div className="flex flex-col justify-center items-center text-center">
              <h2 className="text-2xl font-bold mb-6">My Resume</h2>
              <p className="text-lg mb-6">
                <a href="/images/resume.pdf" target="_blank" rel="noopener noreferrer" className="text-red-600 underline hover:text-red-800">
                  Click here to open the resume in a new tab.
                </a>
              </p>
              {/* Embed the PDF */}
              <embed src="/images/resume.pdf" width="100%" height="600px" />
            </div>
          </div>
        </div>
      )}
    </section>
  );
//};

//export default Hero;
